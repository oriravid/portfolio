[{"/Users/oriravid/Dropbox/a:A/portfolio/src/index.js":"1","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/home.js":"2","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/nav.js":"3","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/about.js":"4","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects.js":"5","/Users/oriravid/Dropbox/a:A/portfolio/src/js/utils/helpers.js":"6","/Users/oriravid/Dropbox/a:A/portfolio/src/js/utils/icons.js":"7"},{"size":1240,"mtime":1612235994491,"results":"8","hashOfConfig":"9"},{"size":2560,"mtime":1612234698498,"results":"10","hashOfConfig":"9"},{"size":863,"mtime":1612224310580,"results":"11","hashOfConfig":"9"},{"size":1715,"mtime":1612224450058,"results":"12","hashOfConfig":"9"},{"size":7307,"mtime":1612225562606,"results":"13","hashOfConfig":"9"},{"size":694,"mtime":1612224212870,"results":"14","hashOfConfig":"9"},{"size":20467,"mtime":1611960557662,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e1vcmk",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/oriravid/Dropbox/a:A/portfolio/src/index.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/home.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/nav.js",[],["32","33"],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/about.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects.js",["34"],"//ext\nimport React, { useState } from \"react\";\n//int - util\nimport * as HELPERS from \"../utils/helpers\";\nimport * as ICONS from \"../utils/icons\";\n//int - images\nimport appo_music from \"../../imgs/appo_music.png\";\nimport devhub from \"../../imgs/devhub.png\";\nimport fletcher_silent from \"../../imgs/fletcher_silent.jpg\";\nimport lyrassist from \"../../imgs/lyrassist.png\";\n\nconst Projects = () => {\n    const [selectedType, setType] = useState(\"ALL\");\n    const [selectedProject, setProject] = useState(null);\n\n    return (\n        <React.Fragment>\n            <div className=\"section\" id=\"projects\">\n                <div className=\"section-inner\">\n                    <div className=\"section-header\">\n                        <h2 className=\"section-title\">Projects</h2>\n                        <ul id=\"project-type-list\">\n                            {types.map((type) => (\n                                <li\n                                    className={`project-type-list-item pointer\n                                    ${selectedType === type ? \" active\" : \"\"}`}\n                                    key={type}\n                                    onClick={(e) =>\n                                        setType(e.currentTarget.innerText)\n                                    }\n                                >\n                                    {type}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n\n                    <div id=\"project-list\">\n                        {projects\n                            .filter((project) =>\n                                selectedType === \"ALL\"\n                                    ? true\n                                    : project.type === selectedType\n                            )\n                            .map((project, idx) => (\n                                <div\n                                    key={\n                                        types.indexOf(selectedType) *\n                                            projects.length +\n                                        idx\n                                    }\n                                    className={`project-list-item ${project.type.toLowerCase()} pointer`}\n                                    style={{\n                                        backgroundImage: `url(${project.image})`,\n                                        animationDelay: `${idx * 0.25}s`,\n                                    }}\n                                    onClick={() => setProject(project)}\n                                >\n                                    <div className=\"project-overlay\">\n                                        <div className=\"project-overlay-inner\">\n                                            <h3 className=\"project-title\">\n                                                {project.title}\n                                            </h3>\n                                        </div>\n                                        <div className=\"project-overlay-inner\">\n                                            <span className=\"project-date\">\n                                                {HELPERS.dateFormatter(\n                                                    project.date,\n                                                    \"short\"\n                                                )}\n                                            </span>\n                                            <span className=\"project-type\">\n                                                {project.type}\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n            {selectedProject ? (\n                <div\n                    id=\"project-detail-container\"\n                    onClick={(e) => {\n                        if (e.target === e.currentTarget) setProject(null);\n                    }}\n                >\n                    <div className=\"section-inner\">\n                        {ICONS.close(\"detail-close pointer\", () =>\n                            setProject(null)\n                        )}\n                        <div className=\"project-content\">\n                            <h3>{selectedProject.title}</h3>\n                            <span>\n                                {HELPERS.dateFormatter(selectedProject.date)}\n                            </span>\n                            <img\n                                src={selectedProject?.image}\n                                alt={selectedProject?.name}\n                            />\n                            <p>{selectedProject.description}</p>\n                            {Object.keys(selectedProject.links).map(\n                                (linkText) => (\n                                    <a\n                                        key={linkText}\n                                        href={selectedProject.links[linkText]}\n                                        target=\"_blank\"\n                                    >\n                                        <div className=\"button primary\">\n                                            {linkText}\n                                        </div>\n                                    </a>\n                                )\n                            )}\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                \"\"\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Projects;\n\nconst types = [\"ALL\", \"MUSIC\", \"CODE\"];\n\nconst projects = [\n    {\n        title: \"Appo Music\",\n        description:\n            \"Appo Music is a full-stack clone of the incredible Apple Music online streaming platform, with an aim to re-create it's core features, seamless design, and excellent user experience.\",\n        date: \"2021-01-01\",\n        image: appo_music,\n        links: { view: \"https://appo-music.herokuapp.com/\" },\n        type: \"CODE\",\n    },\n    {\n        title: \"Fletcher â€“ Silent Night\",\n        description: \"bunch of random text\",\n        date: \"2020-12-01\",\n        image: fletcher_silent,\n        links: {\n            listen:\n                \"https://music.apple.com/us/album/silent-night-single/1541041366\",\n        },\n        type: \"MUSIC\",\n    },\n    {\n        title: \"LYRASSIST\",\n        description:\n            \"LYRASSIST is a word recommendation tool and visualizer for writers. Built strictly with JavaScript/JQuery, HTML and CSS to showcase front-end animation/transitions.\",\n        date: \"2020-11-30\",\n        image: lyrassist,\n        links: { view: \"https://oriravid.github.io/LYRASSIST/\" },\n        type: \"CODE\",\n    },\n    {\n        title: \"devHub\",\n        description:\n            \"devHUB is a platform that empowers developers to showcase themselves and their work, connect with other developers, and access job opportunities. General professionals have Linkedin, designers have Dribble, and now developers have devHUB.\",\n        date: \"2020-11-25\",\n        image: devhub,\n        links: { view: \"https://getdevhub.herokuapp.com/#/\" },\n        type: \"CODE\",\n    },\n];\n","/Users/oriravid/Dropbox/a:A/portfolio/src/js/utils/helpers.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/utils/icons.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":105,"column":37,"nodeType":"41","endLine":109,"endColumn":38},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]