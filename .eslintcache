[{"/Users/oriravid/Dropbox/a:A/portfolio/src/index.js":"1","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/home.js":"2","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/about.js":"3","/Users/oriravid/Dropbox/a:A/portfolio/src/js/utils/helpers.js":"4","/Users/oriravid/Dropbox/a:A/portfolio/src/js/utils/icons.js":"5","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects/projects.js":"6","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects/project_data.js":"7","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects/project_links.js":"8","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects/project_display.js":"9"},{"size":1381,"mtime":1616047679864,"results":"10","hashOfConfig":"11"},{"size":3072,"mtime":1616092700968,"results":"12","hashOfConfig":"11"},{"size":2915,"mtime":1616090603054,"results":"13","hashOfConfig":"11"},{"size":1542,"mtime":1615934825738,"results":"14","hashOfConfig":"11"},{"size":1867,"mtime":1615946805364,"results":"15","hashOfConfig":"11"},{"size":3755,"mtime":1616044943056,"results":"16","hashOfConfig":"11"},{"size":10732,"mtime":1615934825737,"results":"17","hashOfConfig":"11"},{"size":1201,"mtime":1615947304206,"results":"18","hashOfConfig":"11"},{"size":5639,"mtime":1616045975544,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1e1vcmk",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},"/Users/oriravid/Dropbox/a:A/portfolio/src/index.js",["42"],"//ext\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport HttpsRedirect from \"react-https-redirect\";\nimport ReactGA from \"react-ga\";\n//int - css\nimport \"./css/resets.css\";\nimport \"./css/styles.scss\";\n//int - components\n// import Nav from \"./js/components/nav\";\nimport Home from \"./js/components/home\";\nimport Projects from \"./js/components/projects/projects\";\nimport About from \"./js/components/about\";\n\n//Google Analytics\nfunction initializeReactGA() {\n    ReactGA.initialize(\"UA-50867458-1\");\n    ReactGA.pageview(\"/\");\n}\ninitializeReactGA();\n\n//Set app height\nconst setHeight = () => {\n    document.body.style.height = window.innerHeight + \"px\";\n};\nwindow.addEventListener(\"resize\", setHeight);\nsetHeight();\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const root = document.getElementById(\"root\");\n\n    const Root = () => {\n        const [scrollAmt, setScrollAmt] = useState(0);\n\n        root.addEventListener(\"scroll\", (e) => {\n            setScrollAmt(e.target.scrollTop);\n        });\n\n        return (\n            // <HttpsRedirect>\n            <React.Fragment>\n                <Home scrollAmt={scrollAmt} />\n                <Projects inView={scrollAmt > window.innerHeight / 2} />\n                <About />\n            </React.Fragment>\n            // </HttpsRedirect>\n        );\n    };\n\n    ReactDOM.render(<Root />, root);\n});\n",["43","44"],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/home.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/about.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/utils/helpers.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/utils/icons.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects/projects.js",["45"],"//ext\nimport React, { useState, useEffect } from \"react\";\n//int - components\nimport ProjectDisplay from \"./project_display\";\nimport ProjectLinks from \"./project_links\";\n//int - util\nimport * as HELPERS from \"../../utils/helpers\";\nimport * as ICONS from \"../../utils/icons\";\n\nconst Projects = ({ inView }) => {\n    const [rendered, setRendered] = useState(inView);\n    const [selectedProject, setProject] = useState(null);\n\n    useEffect(() => {\n        if (inView === true && rendered === false) setRendered(true);\n    }, [inView]);\n\n    return (\n        <React.Fragment>\n            <div className=\"section\" id=\"projects\">\n                <ProjectDisplay rendered={rendered} setProject={setProject} />\n                {selectedProject ? (\n                    <div\n                        id=\"project-detail-container\"\n                        onClick={(e) => {\n                            if (e.target === e.currentTarget) setProject(null);\n                        }}\n                    >\n                        <div\n                            id=\"project-detail-inner\"\n                            className={`${\n                                selectedProject.links.YouTube ? \"video\" : \"\"\n                            }`}\n                        >\n                            {ICONS.close(\"detail-close pointer\", () =>\n                                setProject(null)\n                            )}\n                            <div id=\"project-detail-header\">\n                                <h2 id=\"project-detail-title\">\n                                    {selectedProject.title}\n                                </h2>\n                                <h3 id=\"project-detail-subtitle\">\n                                    {selectedProject.subtitle}\n                                </h3>\n                                <span id=\"project-detail-date\">\n                                    {HELPERS.dateFormatter(\n                                        selectedProject.date\n                                    )}\n                                </span>\n                            </div>\n                            {selectedProject.links.YouTube ? (\n                                <div id=\"project-detail-video\">\n                                    <iframe\n                                        title=\"YouTube Video\"\n                                        width=\"1064\"\n                                        height=\"598\"\n                                        src={`https://www.youtube-nocookie.com/embed/${selectedProject.links.YouTube}`}\n                                        frameBorder=\"0\"\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowFullScreen\n                                    ></iframe>\n                                </div>\n                            ) : (\n                                <img\n                                    id=\"project-detail-image\"\n                                    src={selectedProject?.image}\n                                    alt={selectedProject?.name}\n                                />\n                            )}\n                            <div id=\"project-detail-content\">\n                                <p id=\"project-detail-text\">\n                                    {selectedProject.description}\n                                </p>\n                                <ProjectLinks links={selectedProject.links} />\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Projects;\n","/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects/project_data.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects/project_links.js",[],"/Users/oriravid/Dropbox/a:A/portfolio/src/js/components/projects/project_display.js",["46","47","48"],"//ext\nimport React, { useState, useEffect } from \"react\";\n//int - util\nimport * as PD from \"./project_data\";\nimport * as HELPERS from \"../../utils/helpers\";\n\nconst ProjectDisplay = ({ rendered, setProject }) => {\n    const calcNumProjects = () => {\n        if (!rendered) return 0;\n\n        let cols = 3;\n        let rows = 2;\n\n        if (window.innerWidth < 1100) {\n            cols = 2;\n        }\n\n        if (window.innerHeight < 650) {\n            rows = 1;\n        }\n\n        if (window.innerWidth < 400 && window.innerHeight < 650) {\n            return 4;\n        }\n\n        return rows * cols;\n    };\n\n    useEffect(() => {\n        setNumProjects(calcNumProjects());\n    }, [rendered]);\n\n    const filterProjects = () => {\n        return PD.projects.filter((project) =>\n            selectedType === \"ALL\" ? true : project.type === selectedType\n        );\n    };\n\n    const [selectedType, setType] = useState(\"ALL\");\n    const [projectStartIdx, setProjectStartIdx] = useState(0);\n    const [numProjects, setNumProjects] = useState(calcNumProjects());\n    const [prevInactive, setPrevInactive] = useState(true);\n    const [nextInactive, setNextInactive] = useState(true);\n    const [projects, setProjects] = useState(PD.projects);\n\n    window.addEventListener(\"resize\", () => {\n        setNumProjects(calcNumProjects());\n    });\n\n    useEffect(() => {\n        setProjectStartIdx(0);\n        setProjects(filterProjects());\n    }, [selectedType]);\n\n    useEffect(() => {\n        setPrevInactive(projectStartIdx === 0);\n        setNextInactive(\n            projectStartIdx + numProjects >= filterProjects().length\n        );\n    }, [projectStartIdx, numProjects, selectedType]);\n\n    const renderPrev = () => {\n        return (\n            <div\n                className={`project-nav-btn ${\n                    prevInactive ? \"inactive\" : \"pointer\"\n                }`}\n                onClick={() => {\n                    if (!prevInactive)\n                        setProjectStartIdx(projectStartIdx - numProjects);\n                }}\n            >\n                PREV\n            </div>\n        );\n    };\n\n    const renderNext = () => {\n        return (\n            <div\n                className={`project-nav-btn ${\n                    nextInactive ? \"inactive\" : \"pointer\"\n                }`}\n                onClick={() => {\n                    if (!nextInactive)\n                        setProjectStartIdx(projectStartIdx + numProjects);\n                }}\n            >\n                NEXT\n            </div>\n        );\n    };\n\n    return (\n        <div className={`section-inner${rendered ? \" active\" : \"\"}`}>\n            <div className=\"section-header\">\n                <h2 className=\"section-title\">Projects</h2>\n                <ul id=\"project-type-list\">\n                    {PD.types.map((type) => (\n                        <li\n                            className={`project-type-list-item pointer\n                                    ${selectedType === type ? \" active\" : \"\"}`}\n                            key={type}\n                            onClick={(e) => setType(e.currentTarget.innerText)}\n                        >\n                            {type}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            <div id=\"project-list\">\n                {projects\n                    .slice(projectStartIdx, projectStartIdx + numProjects)\n                    .map((project, idx) => (\n                        <div\n                            key={\n                                PD.types.indexOf(selectedType) *\n                                    PD.projects.length +\n                                project.id\n                            }\n                            className=\"project-list-item pointer\"\n                            style={{\n                                backgroundImage: `url(${project.image})`,\n                                animationDelay: `${idx * 0.25}s`,\n                            }}\n                            onClick={() => setProject(project)}\n                        >\n                            <div\n                                className={`project-overlay ${project.type.toLowerCase()}`}\n                            >\n                                <div className=\"project-overlay-inner\">\n                                    <h2 className=\"project-title\">\n                                        {project.title}\n                                    </h2>\n                                    <div className=\"divider\"></div>\n                                    <h3 className=\"project-subtitle\">\n                                        {project.subtitle}\n                                    </h3>\n                                </div>\n                                <div className=\"project-overlay-inner\">\n                                    <span className=\"project-date\">\n                                        {HELPERS.dateFormatter(\n                                            project.date,\n                                            \"short\"\n                                        )}\n                                    </span>\n                                    <span className={\"project-type\"}>\n                                        {project.type}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n            </div>\n            <div id=\"project-nav\">\n                {renderPrev()}\n                {renderNext()}\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectDisplay;\n",{"ruleId":"49","severity":1,"message":"50","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":21},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":16,"column":8,"nodeType":"59","endLine":16,"endColumn":16,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":31,"column":8,"nodeType":"59","endLine":31,"endColumn":18,"suggestions":"62"},{"ruleId":"57","severity":1,"message":"63","line":53,"column":8,"nodeType":"59","endLine":53,"endColumn":22,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"63","line":60,"column":8,"nodeType":"59","endLine":60,"endColumn":52,"suggestions":"65"},"no-unused-vars","'HttpsRedirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rendered'. Either include it or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'calcNumProjects'. Either include it or remove the dependency array.",["69"],"React Hook useEffect has a missing dependency: 'filterProjects'. Either include it or remove the dependency array.",["70"],["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [inView, rendered]",{"range":"80","text":"81"},"Update the dependencies array to be: [calcNumProjects, rendered]",{"range":"82","text":"83"},"Update the dependencies array to be: [filterProjects, selectedType]",{"range":"84","text":"85"},"Update the dependencies array to be: [projectStartIdx, numProjects, selectedType, filterProjects]",{"range":"86","text":"87"},[522,530],"[inView, rendered]",[682,692],"[calcNumProjects, rendered]",[1435,1449],"[filterProjects, selectedType]",[1635,1679],"[projectStartIdx, numProjects, selectedType, filterProjects]"]